z1[i] <- z.test(df$X1)
z2[i] <- z.test(df$X2)
z3[i] <- z.test(df$X3)
# numberof false rejection
R0_t[i] <- ifelse(z1[i]>=qnorm(0.95),1,0) + ifelse(z2[i]>=qnorm(0.95),1,0)
# numberof all rejection
R_t[i] <- ifelse(z1[i]>=qnorm(0.95),1,0) + ifelse(z2[i]>=qnorm(0.95),1,0)+ifelse(z3[i]>=qnorm(0.95),1,0)
R_t[i] <- max(R_t[i],1)
# emprical fdr
#empricalFDR[i] <- R0_t[i]/max(R_t[i],1)
}
# numberof all rejection
# calculate empirical mean/var of fdr
mean.eVeR <- mean(R0_t)/mean(R_t)
var.eVeR <- var(R0_t)/var(R_t)
if (stat=='mean'){
return(mean.eVeR)
} else if (stat=='var'){
return(var.eVeR )
}
}
##############  eVeR vs rho #############
rho.list <- seq(0,1,by=0.05)
error.mean_m3  <- sapply(rho.list, eVeR_m3 ,B=5000,stat='mean')
plot(error.mean_m3 ~rho.list,xlab='Correlation', ylab='E(v)/E(R) (mean)' )
eVeR_m3 <- function(rho,B,stat){
# initilize storage vectors
z1 <- c()
z2 <- c()
z3 <- c()
R0_t <- c()
R_t <- c()
#empricalFDR <- c()
# create covariance matrix
mean <- c(0,0,0.1)
sigma <- matrix(c(1,rho ,rho,
rho,1 ,rho,
rho ,rho,1 ),3,3)
# Simulation
for (i in 1:B) {
# create dataset: x1 is true null; x2 is false null
df <- data.frame(mvrnorm(n = 200, mu=mean, sigma))
# calculate z stats
z1[i] <- z.test(df$X1)
z2[i] <- z.test(df$X2)
z3[i] <- z.test(df$X3)
# numberof false rejection
R0_t[i] <- ifelse(z1[i]>=qnorm(0.95),1,0) + ifelse(z2[i]>=qnorm(0.95),1,0)
# numberof all rejection
R_t[i] <- ifelse(z1[i]>=qnorm(0.95),1,0) + ifelse(z2[i]>=qnorm(0.95),1,0)+ifelse(z3[i]>=qnorm(0.95),1,0)
R_t[i] <- max(R_t[i],1)
# emprical fdr
#empricalFDR[i] <- R0_t[i]/max(R_t[i],1)
}
# numberof all rejection
# calculate empirical mean/var of fdr
mean.eVeR <- mean(R0_t)/mean(R_t)
var.eVeR <- var(R0_t)/var(R_t)
if (stat=='mean'){
return(mean.eVeR)
} else if (stat=='var'){
return(var.eVeR )
}
}
##############  eVeR vs rho #############
rho.list <- seq(0,1,by=0.05)
error.mean_m3  <- sapply(rho.list, eVeR_m3 ,B=5000,stat='mean')
plot(error.mean_m3 ~rho.list,xlab='Correlation', ylab='E(v)/E(R) (mean)' )
eVeR_m3 <- function(rho,B,stat){
# initilize storage vectors
z1 <- c()
z2 <- c()
z3 <- c()
R0_t <- c()
R_t <- c()
#empricalFDR <- c()
# create covariance matrix
mean <- c(0,0,0.1)
sigma <- matrix(c(1,rho ,rho,
rho,1 ,rho,
rho ,rho,1 ),3,3)
# Simulation
for (i in 1:B) {
# create dataset: x1 is true null; x2 is false null
df <- data.frame(mvrnorm(n = 200, mu=mean, sigma))
# calculate z stats
z1[i] <- z.test(df$X1)
z2[i] <- z.test(df$X2)
z3[i] <- z.test(df$X3)
# numberof false rejection
R0_t[i] <- ifelse(z1[i]>=qnorm(0.95),1,0) + ifelse(z2[i]>=qnorm(0.95),1,0)
# numberof all rejection
R_t[i] <- ifelse(z1[i]>=qnorm(0.95),1,0) + ifelse(z2[i]>=qnorm(0.95),1,0)+ifelse(z3[i]>=qnorm(0.95),1,0)
R_t[i] <- max(R_t[i],1)
# emprical fdr
#empricalFDR[i] <- R0_t[i]/max(R_t[i],1)
}
# numberof all rejection
# calculate empirical mean/var of fdr
mean.eVeR <- mean(R0_t)/mean(R_t)
var.eVeR <- var(R0_t)/var(R_t)
if (stat=='mean'){
return(mean.eVeR)
} else if (stat=='var'){
return(var.eVeR )
}
}
##############  eVeR vs rho #############
rho.list <- seq(0,1,by=0.05)
error.mean_m3  <- sapply(rho.list, eVeR_m3 ,B=5000,stat='mean')
plot(error.mean_m3 ~rho.list,xlab='Correlation', ylab='E(v)/E(R) (mean)' )
empricalFDR_m <- function(rho,m,B,stat){
#n.reject
R0_t <- c()
R_t <- c()
fdr <- c()
# create correlation mareix with equal correlation
sigma <- diag(m)+matrix(rep(rho,m*m),nrow=m)-diag(rep(rho,m))
# Simulation start
for (i in 1:B) {
# create multivariate normal observations
df <- data.frame(mvrnorm(n = 200, mu=c(rep(0,0.9*m),rep(0.1,0.1*m)), sigma))
# calculate z stats
mul.z <- apply(df,2,z.test)
# numberof false rejection
#n.reject <- sum(mul.z>=qnorm(0.95))
R0_t[i] <- sum(mul.z[1:(0.9*m)]>=qnorm(0.95))
R_t[i] <- sum(mul.z>=qnorm(0.95))
R_t[i] <- max(R_t[i],1)
fdr[i] <- R0_t[i]/R_t[i]
}
# calculate empirical mean/var of # rejections
mean.fdr <- mean(fdr)
var.fdr <- var(fdr)
if (stat=='mean'){
return(mean.fdr)
} else if (stat=='var'){
return(var.fdr)
}
}
#  mean
rho.list <- seq(0,1,by=0.05)
set.seed(100)
error.mean_m  <- sapply(rho.list, empricalFDR_m, m=100, B=1000,stat='mean')
plot(error.mean_m ~rho.list,xlab='Correlation', ylab='Empirical FDR' )
empricalEvEr_m <- function(rho,m,B,stat){
#n.reject
R0_t <- c()
R_t <- c()
fdr <- c()
# create correlation mareix with equal correlation
sigma <- diag(m)+matrix(rep(rho,m*m),nrow=m)-diag(rep(rho,m))
# Simulation start
for (i in 1:B) {
# create multivariate normal observations
df <- data.frame(mvrnorm(n = 200, mu=c(rep(0,0.9*m),rep(0.1,0.5*m)), sigma))
# calculate z stats
mul.z <- apply(df,2,z.test)
# numberof false rejection
#n.reject <- sum(mul.z>=qnorm(0.95))
R0_t[i] <- sum(mul.z[1:(0.9*m)]>=qnorm(0.95))
R_t[i] <- sum(mul.z>=qnorm(0.95))
R_t[i] <- max(R_t[i],1)
fdr[i] <- R0_t[i]/R_t[i]
}
# calculate E(v)/E(R)
mean.R0_t<- mean(R0_t)
mean.R_t<- mean(R_t)
eVeR <- mean.R0_t/mean.R_t
return(eVeR)
#   var.fdr <- var(fdr)
#
#   if (stat=='mean'){
#     return(mean.fdr)
#   } else if (stat=='var'){
#     return(var.fdr)
#   }
}
#  mean
rho.list <- seq(0,1,by=0.05)
set.seed(100)
error.mean_m  <- sapply(rho.list, empricalEvEr_m, m=10, B=1000)
plot(error.mean_m ~rho.list,xlab='Correlation', ylab='Empirical E(v)/E(R) (mean)' )
empricalEvEr_m <- function(rho,m,B,stat){
#n.reject
R0_t <- c()
R_t <- c()
fdr <- c()
# create correlation mareix with equal correlation
sigma <- diag(m)+matrix(rep(rho,m*m),nrow=m)-diag(rep(rho,m))
# Simulation start
for (i in 1:B) {
# create multivariate normal observations
df <- data.frame(mvrnorm(n = 200, mu=c(rep(0,0.9*m),rep(0.5,0.1*m)), sigma))
# calculate z stats
mul.z <- apply(df,2,z.test)
# numberof false rejection
#n.reject <- sum(mul.z>=qnorm(0.95))
R0_t[i] <- sum(mul.z[1:(0.9*m)]>=qnorm(0.95))
R_t[i] <- sum(mul.z>=qnorm(0.95))
R_t[i] <- max(R_t[i],1)
fdr[i] <- R0_t[i]/R_t[i]
}
# calculate E(v)/E(R)
mean.R0_t<- mean(R0_t)
mean.R_t<- mean(R_t)
eVeR <- mean.R0_t/mean.R_t
return(eVeR)
#   var.fdr <- var(fdr)
#
#   if (stat=='mean'){
#     return(mean.fdr)
#   } else if (stat=='var'){
#     return(var.fdr)
#   }
}
#  mean
rho.list <- seq(0,1,by=0.05)
set.seed(100)
error.mean_m  <- sapply(rho.list, empricalEvEr_m, m=10, B=1000)
plot(error.mean_m ~rho.list,xlab='Correlation', ylab='Empirical E(v)/E(R) (mean)' )
empricalEvEr_m <- function(rho,m,B,stat){
#n.reject
R0_t <- c()
R_t <- c()
fdr <- c()
# create correlation mareix with equal correlation
sigma <- diag(m)+matrix(rep(rho,m*m),nrow=m)-diag(rep(rho,m))
# Simulation start
for (i in 1:B) {
# create multivariate normal observations
df <- data.frame(mvrnorm(n = 200, mu=c(rep(0,0.9*m),rep(0.5,0.1*m)), sigma))
# calculate z stats
mul.z <- apply(df,2,z.test)
# numberof false rejection
#n.reject <- sum(mul.z>=qnorm(0.95))
R0_t[i] <- sum(mul.z[1:(0.9*m)]>=qnorm(0.95))
R_t[i] <- sum(mul.z>=qnorm(0.95))
R_t[i] <- max(R_t[i],1)
fdr[i] <- R0_t[i]/R_t[i]
}
# calculate E(v)/E(R)
mean.R0_t<- mean(R0_t)
mean.R_t<- mean(R_t)
eVeR <- mean.R0_t/mean.R_t
return(eVeR)
#   var.fdr <- var(fdr)
#
#   if (stat=='mean'){
#     return(mean.fdr)
#   } else if (stat=='var'){
#     return(var.fdr)
#   }
}
#  mean
rho.list <- seq(0,1,by=0.05)
set.seed(100)
error.mean_m  <- sapply(rho.list, empricalEvEr_m, m=100, B=1000)
plot(error.mean_m ~rho.list,xlab='Correlation', ylab='Empirical E(v)/E(R) (mean)' )
empricalFDR_m <- function(rho,m,B,stat){
#n.reject
R0_t <- c()
R_t <- c()
fdr <- c()
# create correlation mareix with equal correlation
sigma <- diag(m)+matrix(rep(rho,m*m),nrow=m)-diag(rep(rho,m))
# Simulation start
for (i in 1:B) {
# create multivariate normal observations
df <- data.frame(mvrnorm(n = 200, mu=c(rep(0,0.9*m),rep(0.5,0.1*m)), sigma))
# calculate z stats
mul.z <- apply(df,2,z.test)
# numberof false rejection
#n.reject <- sum(mul.z>=qnorm(0.95))
R0_t[i] <- sum(mul.z[1:(0.9*m)]>=qnorm(0.95))
R_t[i] <- sum(mul.z>=qnorm(0.95))
R_t[i] <- max(R_t[i],1)
fdr[i] <- R0_t[i]/R_t[i]
}
# calculate empirical mean/var of # rejections
mean.fdr <- mean(fdr)
var.fdr <- var(fdr)
if (stat=='mean'){
return(mean.fdr)
} else if (stat=='var'){
return(var.fdr)
}
}
#  mean
rho.list <- seq(0,1,by=0.05)
set.seed(100)
error.mean_m  <- sapply(rho.list, empricalFDR_m, m=100, B=1000,stat='mean')
plot(error.mean_m ~rho.list,xlab='Correlation', ylab='Empirical FDR' )
empricalEvEr_m <- function(rho,m,B,stat){
#n.reject
R0_t <- c()
R_t <- c()
fdr <- c()
# create correlation mareix with equal correlation
sigma <- diag(m)+matrix(rep(rho,m*m),nrow=m)-diag(rep(rho,m))
# Simulation start
for (i in 1:B) {
# create multivariate normal observations
df <- data.frame(mvrnorm(n = 200, mu=c(rep(0,0.9*m),rep(0.1,0.1*m)), sigma))
# calculate z stats
mul.z <- apply(df,2,z.test)
# numberof false rejection
#n.reject <- sum(mul.z>=qnorm(0.95))
R0_t[i] <- sum(mul.z[1:(0.9*m)]>=qnorm(0.95))
R_t[i] <- sum(mul.z>=qnorm(0.95))
R_t[i] <- max(R_t[i],1)
fdr[i] <- R0_t[i]/R_t[i]
}
# calculate E(v)/E(R)
mean.R0_t<- mean(R0_t)
mean.R_t<- mean(R_t)
eVeR <- mean.R0_t/mean.R_t
return(eVeR)
#   var.fdr <- var(fdr)
#
#   if (stat=='mean'){
#     return(mean.fdr)
#   } else if (stat=='var'){
#     return(var.fdr)
#   }
}
#  mean
rho.list <- seq(0,1,by=0.05)
set.seed(100)
error.mean_m  <- sapply(rho.list, empricalEvEr_m, m=100, B=1000)
plot(error.mean_m ~rho.list,xlab='Correlation', ylab='Empirical E(v)/E(R) (mean)' )
empricalEvEr_m <- function(rho,m,B,stat){
#n.reject
R0_t <- c()
R_t <- c()
fdr <- c()
# create correlation mareix with equal correlation
sigma <- diag(m)+matrix(rep(rho,m*m),nrow=m)-diag(rep(rho,m))
# Simulation start
for (i in 1:B) {
# create multivariate normal observations
df <- data.frame(mvrnorm(n = 200, mu=c(rep(0,0.9*m),rep(0.1,0.1*m)), sigma))
# calculate z stats
mul.z <- apply(df,2,z.test)
# numberof false rejection
#n.reject <- sum(mul.z>=qnorm(0.95))
R0_t[i] <- sum(mul.z[1:(0.9*m)]>=qnorm(0.95))
R_t[i] <- sum(mul.z>=qnorm(0.95))
R_t[i] <- max(R_t[i],1)
fdr[i] <- R0_t[i]/R_t[i]
}
# calculate E(v)/E(R)
mean.R0_t<- mean(R0_t)
mean.R_t<- mean(R_t)
eVeR <- mean.R0_t/mean.R_t
return(eVeR)
#   var.fdr <- var(fdr)
#
#   if (stat=='mean'){
#     return(mean.fdr)
#   } else if (stat=='var'){
#     return(var.fdr)
#   }
}
#  mean
rho.list <- seq(0,1,by=0.05)
set.seed(100)
error.mean_m  <- sapply(rho.list, empricalEvEr_m, m=100, B=1000)
plot(error.mean_m ~rho.list,xlab='Correlation', ylab='Empirical E(v)/E(R) (mean)' )
rho.list <- seq(0,1,by=0.05)
set.seed(100)
error.mean_m  <- sapply(rho.list, empricalEvEr_m, m=1000, B=1000)
}
#  mean
rho.list <- seq(0,1,by=0.05)
set.seed(100)
error.mean_m  <- sapply(rho.list, empricalEvEr_m, m=1000, B=2)
rho.list <- seq(0,1,by=0.05)
set.seed(100)
error.mean_m  <- sapply(rho.list, empricalEvEr_m, m=1000, B=2)
plot(error.mean_m ~rho.list,xlab='Correlation', ylab='Empirical E(v)/E(R) (mean)' )
rho.list <- seq(0,1,by=0.05)
set.seed(100)
error.mean_m  <- sapply(rho.list, empricalEvEr_m, m=10, B=1000)
plot(error.mean_m ~rho.list,xlab='Correlation', ylab='Empirical E(v)/E(R) (mean)' )
rho.list <- seq(0,1,by=0.05)
set.seed(100)
error.mean_m  <- sapply(rho.list, empricalEvEr_m, m=10, B=1000)
plot(error.mean_m ~rho.list,xlab='Correlation', ylab='Empirical E(v)/E(R) (mean)' )
#  mean
rho.list <- seq(0,1,by=0.05)
#set.seed(100)
error.mean_m  <- sapply(rho.list, empricalEvEr_m, m=10, B=1000)
plot(error.mean_m ~rho.list,xlab='Correlation', ylab='Empirical E(v)/E(R) (mean)' )
rho.list <- seq(0,1,by=0.05)
#set.seed(100)
error.mean_m  <- sapply(rho.list, empricalEvEr_m, m=20, B=1000)
plot(error.mean_m ~rho.list,xlab='Correlation', ylab='Empirical E(v)/E(R) (mean)' )
empricalEvEr_m <- function(rho,m,B,stat){
#n.reject
R0_t <- c()
R_t <- c()
fdr <- c()
# create correlation mareix with equal correlation
sigma <- diag(m)+matrix(rep(rho,m*m),nrow=m)-diag(rep(rho,m))
# Simulation start
for (i in 1:B) {
# create multivariate normal observations
df <- data.frame(mvrnorm(n = 200, mu=c(rep(0,0.9*m),rep(0.1,0.1*m)), sigma))
# calculate z stats
mul.z <- apply(df,2,z.test)
# numberof false rejection
#n.reject <- sum(mul.z>=qnorm(0.95))
R0_t[i] <- sum(mul.z[1:(0.9*m)]>=qnorm(0.95))
R_t[i] <- sum(mul.z>=qnorm(0.95))
R_t[i] <- max(R_t[i],1)
fdr[i] <- R0_t[i]/R_t[i]
}
# calculate E(v)/E(R)
mean.R0_t<- mean(R0_t)
mean.R_t<- mean(R_t)
eVeR <- mean.R0_t/mean.R_t
return(eVeR)
#   var.fdr <- var(fdr)
#
#   if (stat=='mean'){
#     return(mean.fdr)
#   } else if (stat=='var'){
#     return(var.fdr)
#   }
}
#  mean
rho.list <- seq(0,1,by=0.05)
#set.seed(100)
error.mean_m  <- sapply(rho.list, empricalEvEr_m, m=20, B=1000)
plot(error.mean_m ~rho.list,xlab='Correlation', ylab='Empirical E(v)/E(R) (mean)' )
empricalEvEr_m <- function(rho,m,B,stat){
#n.reject
R0_t <- c()
R_t <- c()
fdr <- c()
# create correlation mareix with equal correlation
sigma <- diag(m)+matrix(rep(rho,m*m),nrow=m)-diag(rep(rho,m))
# Simulation start
for (i in 1:B) {
# create multivariate normal observations
df <- data.frame(mvrnorm(n = 200, mu=c(rep(0,0.9*m),rep(0.5,0.1*m)), sigma))
# calculate z stats
mul.z <- apply(df,2,z.test)
# numberof false rejection
#n.reject <- sum(mul.z>=qnorm(0.95))
R0_t[i] <- sum(mul.z[1:(0.9*m)]>=qnorm(0.95))
R_t[i] <- sum(mul.z>=qnorm(0.95))
R_t[i] <- max(R_t[i],1)
fdr[i] <- R0_t[i]/R_t[i]
}
# calculate E(v)/E(R)
mean.R0_t<- mean(R0_t)
mean.R_t<- mean(R_t)
eVeR <- mean.R0_t/mean.R_t
return(eVeR)
#   var.fdr <- var(fdr)
#
#   if (stat=='mean'){
#     return(mean.fdr)
#   } else if (stat=='var'){
#     return(var.fdr)
#   }
}
#  mean
rho.list <- seq(0,1,by=0.05)
#set.seed(100)
error.mean_m  <- sapply(rho.list, empricalEvEr_m, m=20, B=1000)
plot(error.mean_m ~rho.list,xlab='Correlation', ylab='Empirical E(v)/E(R) (mean)' )
empricalEvEr_m <- function(rho,m,B,stat){
#n.reject
R0_t <- c()
R_t <- c()
fdr <- c()
# create correlation mareix with equal correlation
sigma <- diag(m)+matrix(rep(rho,m*m),nrow=m)-diag(rep(rho,m))
# Simulation start
for (i in 1:B) {
# create multivariate normal observations
df <- data.frame(mvrnorm(n = 200, mu=c(rep(0,0.9*m),rep(0.1,0.1*m)), sigma))
# calculate z stats
mul.z <- apply(df,2,z.test)
# numberof false rejection
#n.reject <- sum(mul.z>=qnorm(0.95))
R0_t[i] <- sum(mul.z[1:(0.9*m)]>=qnorm(0.95))
R_t[i] <- sum(mul.z>=qnorm(0.95))
R_t[i] <- max(R_t[i],1)
fdr[i] <- R0_t[i]/R_t[i]
}
# calculate E(v)/E(R)
mean.R0_t<- mean(R0_t)
mean.R_t<- mean(R_t)
eVeR <- mean.R0_t/mean.R_t
return(eVeR)
#   var.fdr <- var(fdr)
#
#   if (stat=='mean'){
#     return(mean.fdr)
#   } else if (stat=='var'){
#     return(var.fdr)
#   }
}
#  mean
rho.list <- seq(0,1,by=0.05)
#set.seed(100)
error.mean_m  <- sapply(rho.list, empricalEvEr_m, m=100, B=1000)
plot(error.mean_m ~rho.list,xlab='Correlation', ylab='Empirical E(v)/E(R) (mean)' )
