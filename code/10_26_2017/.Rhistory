# simulate
library(MASS)
rho <- 1
empricalFDR <- function(rho){
sigma <- matrix(c(1,rho ,rho ,1),2,2)
z.test = function(a, mu=0, var=1){
zeta = (mean(a) - mu) / (sqrt(var / length(a)))
return(zeta)
}
sigma <- matrix(c(1,rho ,rho ,1),2,2)
sigma <
sigma
df <- data.frame(mvrnorm(n = 1000, mu=c(0,0.5), sigma))
View(df)
View(df)
z.test(df$X1)
z.test(df$X2)
z.test(df$X2)
B=1000
for (i in 1:B) {
# create dataset: x1 is true null; x2 is false null
df <- data.frame(mvrnorm(n = 1000, mu=c(0,0.5), sigma))
# calculate z stats
z1[i] <- z.test(df$X1)
z2[i] <- z.test(df$X2)
}
z1 <- c()
z2 <- c()
# Simulation
B=1000
for (i in 1:B) {
# create dataset: x1 is true null; x2 is false null
df <- data.frame(mvrnorm(n = 1000, mu=c(0,0.5), sigma))
# calculate z stats
z1[i] <- z.test(df$X1)
z2[i] <- z.test(df$X2)
}
hist(z1)
hist(z2)
hist(z1,bin=50)
?hist()
hist(z1,breaks=50)
qqplot(z1)
qqnorm(z1)
qqnorm(z2)
qqnorm(z2)
z2
# function for z test
z.test = function(a, mu=0, var=1){
zeta = (mean(a) - mu) / (sqrt(var / length(a)))
return(zeta)
}
empricalFDR <- function(rho){
sigma <- matrix(c(1,rho ,rho ,1),2,2)
# function for z test
z.test = function(a, mu=0, var=1){
zeta = (mean(a) - mu) / (sqrt(var / length(a)))
return(zeta)
}
# initilize z statieitcs
z1 <- c()
z2 <- c()
# Simulation
B=1000
for (i in 1:B) {
# create dataset: x1 is true null; x2 is false null
df <- data.frame(mvrnorm(n = 1000, mu=c(0,0.5), sigma))
# calculate z stats
z1[i] <- z.test(df$X1)
z2[i] <- z.test(df$X2)
}
# rejection
reject_z1 <- ifelse(z1>=qnorm(0.95),1,0)
reject_z2 <- ifelse(z2>=qnorm(0.95),1,0)
# calculate empirical fdr
#fdr.empirical = sum(reject_z1==1)/(sum(reject_z1==1)+sum(reject_z2==1))
# calculate # false rejections
return (sum(reject_z1==1))
}
rho.list <- seq(-1,1,by=0.1)
error.er <- sapply(rho.list, empricalFDR)
plot(error.er~rho.list )
